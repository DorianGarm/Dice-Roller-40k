{"mappings":"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","sources":["script.js"],"sourcesContent":["// ------------------------ Selectors ------------------------\n\nconst rollHitBtn = document.getElementById(\"roll-hit\");\nconst rollWndBtn = document.getElementById(\"roll-wnd\");\nconst rollSaveBtn = document.getElementById(\"roll-save\");\nconst inputAttacks = document.getElementById(\"attack-box\");\nconst inputToHit = document.getElementById(\"to-hit-box\");\nconst inputToWound = document.getElementById(\"to-wound-box\");\nconst inputToSave = document.getElementById(\"to-save-box\");\nconst succesfulHitBox = document.getElementById(\"successful-hits\");\nconst succesfulWoundBox = document.getElementById(\"successful-wounds\");\nconst failedSaveBox = document.getElementById(\"failed-saves\");\nconst HitDice = document.querySelector(\".hit-box\");\nconst WoundDice = document.querySelector(\".wound-box\");\nconst SaveDice = document.querySelector(\".save-box\");\nconst rr1hBtn = document.getElementById(\"rr1-hit\");\nconst rr1wBtn = document.getElementById(\"rr1-wnd\");\nconst rrAhBtn = document.getElementById(\"rrA-hit\");\nconst rrAwBtn = document.getElementById(\"rrA-wnd\");\nconst avgHits = document.getElementById(\"average-hits\");\nconst avgWounds = document.getElementById(\"average-wounds\");\nconst avgSaves = document.getElementById(\"average-saves\");\nconst fnp5Btn = document.getElementById(\"fnp5-btn\");\nconst fnp6Btn = document.getElementById(\"fnp6-btn\");\nconst fnpText = document.getElementById(\"fnp-text\");\n\n// ------------------------ Temporary data block ------------------------\n\nlet tempHitData,\n  tempWoundData,\n  tempSaveData,\n  tempHitCount,\n  tempWoundCount,\n  tempSaveCount;\n\n// ------------------------ Roll Functionality ------------------------\n\nconst roll = function (param) {\n  expected();\n  if (param === \"Hit\") {\n    if (!inputToHit.value) return;\n    tempHitData = roller(inputAttacks.value);\n    updateUI(HitDice);\n  }\n  if (param === \"Wound\") {\n    if (!inputToWound.value) return;\n    tempWoundData = roller(tempHitCount[0]);\n    updateUI(WoundDice);\n  }\n  if (param === \"Save\") {\n    if (!inputToSave.value) return;\n    tempSaveData = roller(tempWoundCount[0]);\n    updateUI(SaveDice);\n  }\n};\n\nconst roller = function (num) {\n  let data = [0, 0, 0, 0, 0, 0, 0];\n  for (let i = 1; i <= num; i++) {\n    let result = dice();\n    let newData = data[result] + 1;\n    data[result] = newData;\n  }\n  return data;\n};\n\nconst dice = function () {\n  return Math.floor(Math.random() * 6) + 1;\n};\n\nconst updateUI = function (param) {\n  if (param === HitDice) {\n    data = tempHitData;\n    tempHitCount = counter(tempHitData, inputToHit.value);\n    succesfulHitBox.textContent = tempHitCount[0];\n    avgText(\"Hits\");\n  }\n  if (param === WoundDice) {\n    data = tempWoundData;\n    tempWoundCount = counter(tempWoundData, inputToWound.value);\n    succesfulWoundBox.textContent = tempWoundCount[0];\n    avgText(\"Wounds\");\n  }\n  if (param === SaveDice) {\n    data = tempSaveData;\n    tempSaveCount = counter(tempSaveData, inputToSave.value);\n    failedSaveBox.textContent = tempSaveCount[1];\n    avgText(\"Saves\");\n  }\n  param.innerHTML = `<p>\n  ${data[1]}x <img src=\"img/dice-1.png\" class=\"dice\" /> ${data[2]}x\n  <img src=\"img/dice-2.png\" class=\"dice\" /> ${data[3]}x\n  <img src=\"img/dice-3.png\" class=\"dice\" />\n  </p>\n  <p>\n  ${data[4]}x <img src=\"img/dice-4.png\" class=\"dice\" /> ${data[5]}x\n  <img src=\"img/dice-5.png\" class=\"dice\" /> ${data[6]}x\n  <img src=\"img/dice-6.png\" class=\"dice\" />\n  </p>`;\n};\n\nconst counter = function (data, threshold) {\n  let successCount = data.slice(threshold);\n  let failCount = data.slice(0, threshold);\n  let sCount = 0;\n  let fCount = 0;\n  for (let i = 0; i < successCount.length; i++) {\n    sCount += successCount[i];\n  }\n  for (let i = 0; i < failCount.length; i++) {\n    fCount += failCount[i];\n  }\n  return [sCount, fCount];\n};\n\nconst avgText = function (param) {\n  const data = expected();\n  if (param === \"Hits\") {\n    const differnce = tempHitCount[0] - data[0];\n    differnceText(differnce, avgHits);\n  }\n  if (param === \"Wounds\") {\n    const differnce = tempWoundCount[0] - data[1];\n    differnceText(differnce, avgWounds);\n  }\n  if (param === \"Saves\") {\n    const differnce = -1 * (data[2] - tempSaveCount[1]);\n    differnceText(differnce, avgSaves);\n  }\n};\n\nconst expected = function () {\n  const expectedHits = Math.round(\n    (inputAttacks.value * (6 - inputToHit.value + 1)) / 6\n  );\n  const expectedWounds = Math.round(\n    (expectedHits * (6 - inputToWound.value + 1)) / 6\n  );\n  const expectedSaves = Math.round(\n    (expectedWounds * (6 - inputToSave.value + 1)) / 6\n  );\n  const expectedFailedSaves = Math.round(expectedWounds - expectedSaves);\n  return [expectedHits, expectedWounds, expectedFailedSaves];\n};\n\nconst differnceText = function (param, type) {\n  if (Math.sign(param) === 1) {\n    type.textContent = `${Math.abs(param)} above average`;\n  }\n  if (Math.sign(param) === 0) {\n    type.textContent = `average`;\n  }\n  if (Math.sign(param) === -1) {\n    type.textContent = `${Math.abs(param)} below average`;\n  }\n};\n\n// ------------------------ Re-Roll 1s functionality ------------------------\n\nconst reRoll1 = function (param) {\n  if (param === \"Hit\") {\n    newRolls = roller(tempHitData[1]);\n    tempHitData[1] = 0;\n    tempHitData = tempHitData.SumArray(newRolls);\n    updateUI(HitDice);\n  }\n  if (param === \"Wound\") {\n    const ones = tempWoundData[1];\n    tempWoundData[1] = 0;\n    rolls = roller(ones);\n    tempWoundData = tempWoundData.SumArray(rolls);\n    updateUI(WoundDice);\n  }\n\n  // Reroll 1s to save functionality, if needed:\n\n  // if (param === \"Save\") {\n  //   const ones = tempSaveData[1];\n  //   tempSaveData[1] = 0;\n  //   rolls = roller(ones);\n  //   tempSaveData = tempSaveData.SumArray(rolls);\n  //   updateUI(SaveDice);\n  // }\n};\n\nArray.prototype.SumArray = function (arr) {\n  var sum = this.map(function (num, idx) {\n    return num + arr[idx];\n  });\n  return sum;\n};\n\n// ------------------------ Re-Roll all fails functionality ------------------------\n\nconst reRollA = function (param) {\n  if (param === \"Hit\") {\n    newRolls = roller(tempHitCount[1]);\n    tempHitCount[1] = 0;\n    dataCleanUp(inputToHit, tempHitData);\n    tempHitData = tempHitData.SumArray(newRolls);\n    updateUI(HitDice);\n  }\n  if (param === \"Wound\") {\n    newRolls = roller(tempWoundCount[1]);\n    tempWoundCount[1] = 0;\n    dataCleanUp(inputToWound, tempWoundData);\n    tempWoundData = tempWoundData.SumArray(newRolls);\n    updateUI(WoundDice);\n  }\n\n  // Reroll all to save functionality, if needed:\n\n  // if (param === \"Save\") {\n  //   newRolls = roller(tempSaveCount[1]);\n  //   tempSaveCount[1] = 0;\n  //   dataCleanUp(inputToSave, tempSaveData);\n  //   tempSaveData = tempSaveData.SumArray(newRolls);\n  //   updateUI(SaveDice);\n  // }\n};\n\nconst dataCleanUp = function (num, data) {\n  for (let i = 0; i < num.value; i++) {\n    data[i] = 0;\n  }\n};\n\n// ------------------------ 5+++ FNP functionality ------------------------\n\nconst FNP = function (val) {\n  const tempFNPData = roller(tempSaveCount[1]);\n  console.log(\"FNP rolls:\" + tempFNPData);\n  const tempFNPCount = counter(tempFNPData, val);\n  fnpText.textContent = `${tempFNPCount[1]} DMG goes through`;\n};\n\n// ------------------------ Event handlers ------------------------\n\nrollHitBtn.addEventListener(\"click\", function () {\n  roll(\"Hit\");\n});\nrollWndBtn.addEventListener(\"click\", function () {\n  roll(\"Wound\");\n});\nrollSaveBtn.addEventListener(\"click\", function () {\n  roll(\"Save\");\n});\nrr1hBtn.addEventListener(\"click\", function () {\n  reRoll1(\"Hit\");\n});\nrr1wBtn.addEventListener(\"click\", function () {\n  reRoll1(\"Wound\");\n});\nfnp5Btn.addEventListener(\"click\", function () {\n  FNP(5);\n});\nfnp6Btn.addEventListener(\"click\", function () {\n  FNP(6);\n});\nrrAhBtn.addEventListener(\"click\", function () {\n  reRollA(\"Hit\");\n});\nrrAwBtn.addEventListener(\"click\", function () {\n  reRollA(\"Wound\");\n});\n\n// ------------------------ Modal button functionality ------------------------\n\nconst modal = document.querySelector(\".modal\");\nconst overlay = document.querySelector(\".overlay\");\nconst btnCloseModal = document.querySelector(\".close-modal\");\nconst btnOpenModal = document.getElementById(\"help\");\n\nbtnOpenModal.addEventListener(\"click\", clickHandlerOpen);\noverlay.addEventListener(\"click\", clickHandlerClose);\n\ndocument.addEventListener(\"keydown\", function (e) {\n  if (e.key === \"Escape\" && !modal.classList.contains(\"hidden\")) {\n    clickHandlerClose();\n  }\n});\n\nfunction clickHandlerOpen() {\n  modal.classList.remove(\"hidden\");\n  overlay.classList.remove(\"hidden\");\n}\n\nfunction clickHandlerClose() {\n  modal.classList.add(\"hidden\");\n  overlay.classList.add(\"hidden\");\n}\n"],"names":[],"version":3,"file":"index.810bb8fa.js.map","sourceRoot":"/__parcel_source_root/"}